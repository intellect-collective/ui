{
  "extends": [
    "airbnb"
  ],
  "plugins": [
    "jsdoc",
    "unicorn",
    "react"
  ],
  "parser": "babel-eslint",
  "globals": {
    "describe": true,
    "expect": true,
    "it": true,
    "jest": true,
    "mount": true,
    "shallow": true
  },
  "rules": {
    "arrow-parens": [
      "error",
      "always"
    ],
    "operator-linebreak": [
      "error",
      "before"
    ],
    "no-console": "error",
    "indent": [
      "error",
      4,
      {
        "SwitchCase": 1,
        "VariableDeclarator": { "var": 2, "let": 2, "const": 3 },
        "outerIIFEBody": 1,
        "MemberExpression": 1,
        "FunctionDeclaration": {"body": 1, "parameters": 2},
        "FunctionExpression": {"body": 1, "parameters": 2},
        "CallExpression": {"arguments": 1},
        "ArrayExpression": 1,
        "ObjectExpression": 1,
        "ignoredNodes": [ "JSXAttribute", "JSXSpreadAttribute" ]
      }
    ],
    "no-warning-comments": [
      "warn",
      {
        "terms": ["todo", "@todo", "fixme", "@fixme", "xxx", "@xxx", "refactor", "@refactor", "security", "@security"]
      }
    ],
    "no-unsafe-finally": "error",
    "comma-dangle": [
      "error",
      {
        "arrays": "never",
        "objects": "never",
        "imports": "never",
        "exports": "never",
        "functions": "never"
      }
    ],
    "arrow-body-style": "off",
    "no-underscore-dangle": "off",
    "template-curly-spacing": "error",
    "radix": "error",
    "no-mixed-operators": "error",
    "no-dupe-keys": "error",
    "default-case": "error",
    "one-var": "error",
    "eqeqeq": "error",
    "no-return-assign": "error",
    "no-shadow": "off",
    "new-cap": "error",
    "no-unreachable": "error",
    "no-useless-constructor": "error",
    "space-in-parens": "error",
    "no-var": "error",
    "quotes": "error",
    "key-spacing": "error",
    "space-before-blocks": "error",
    "object-shorthand": "error",
    "prefer-template": "error",
    "space-infix-ops": "error",
    "space-before-function-paren": "error",
    "jsx-quotes": "error",
    "prefer-arrow-callback": "error",
    "keyword-spacing": "error",
    "spaced-comment": "error",
    "quote-props": ["error", "consistent-as-needed"],
    "array-bracket-spacing": "error",
    "operator-linebreak": "error",
    "comma-spacing": "error",
    "arrow-parens": ["error", "always"],
    "no-extra-boolean-cast": "error",
    "semi-spacing": "error",
    "one-var-declaration-per-line": "error",
    "dot-notation": "error",
    "vars-on-top": "error",
    "arrow-spacing": "error",
    "no-multi-spaces": "error",
    "no-useless-computed-key": "error",
    "no-unneeded-ternary": "error",
    "no-unsafe-negation": "error",
    "object-property-newline": "error",
    "no-extra-semi": "error",
    "block-spacing": "error",
    "func-names": "error",
    "prefer-const": [
        "error",
        {
            "destructuring": "all"
        }
    ],
    "consistent-return": "off",

    "require-jsdoc": "error",
    "valid-jsdoc": [
      "error",
      {
        "matchDescription": ".+",
        "requireParamDescription": true,
        "requireReturn": false,
        "requireReturnType": true,
        "requireReturnDescription": true,
        "prefer": {
          "arg": "param",
          "argument": "param",
          "return": "returns",
          "virtual": "abstract"
        },
        "preferType": {
          "boolean": "Boolean",
          "number": "Number",
          "object": "Object",
          "string": "String"
        }
      }
    ],
    "no-unused-vars": ["error", {
      "ignoreRestSiblings": true,
      "varsIgnorePattern": "React"
    }],

    "import/extensions": "error",
    "import/first": "error",
    "import/newline-after-import": "error",
    "import/no-extraneous-dependencies": "off",
    "import/prefer-default-export": "off",

    "jsdoc/require-hyphen-before-param-description": "error",

    "jsx-a11y/href-no-hash": "off",
    "jsx-a11y/label-has-for": "off",
    "jsx-a11y/no-static-element-interactions": "error",

    "react/button-has-type": "off",
    "react/destructuring-assignment": "off",
    "react/forbid-prop-types": "off",
    "react/jsx-boolean-value": "error",
    "react/jsx-closing-bracket-location": [
        "error",
        {
            "nonEmpty": "after-props",
            "selfClosing": "after-props"
        }
    ],
    "react/jsx-curly-spacing": [
        "error",
        {
            "when": "always",
            "spacing": {
                "objectLiterals": "never"
            },
            "attributes": {
                "allowMultiline": false
            }
        }
    ],
    "react/jsx-equals-spacing": "error",
    "react/jsx-indent": ["error", 4],
    "react/jsx-indent-props": ["error", 8],
    "react/jsx-filename-extension": "off",
    "react/jsx-first-prop-new-line": ["error", "never"],
    "react/jsx-no-bind": "error",
    "react/jsx-one-expression-per-line": "off",
    "react/jsx-space-before-closing": "error",
    "react/jsx-tag-spacing": "error",
    "react/jsx-wrap-multilines": "error",
    "react/no-array-index-key": "error",
    "react/no-danger": "error",
    "react/no-deprecated": "error",
    "react/no-find-dom-node": "error",
    "react/no-multi-comp": "error",
    "react/no-string-refs": "error",
    "react/no-unused-prop-types": "error",
    "react/require-default-props": "off",
    "react/prefer-es6-class": "error",
    "react/prefer-stateless-function": "error",
    "react/prop-types": "error",
    "react/self-closing-comp": "error",
    "react/sort-comp": ["error", {
        "order": [
            "static-methods",
            "lifecycle",
            "everything-else",
            "render"
        ],
        "groups": {
            "lifecycle": [
                "statics",
                "displayName",
                "propTypes",
                "defaultProps",
                "contextTypes",
                "childContextTypes",
                
                "constructor",
                "getDefaultProps",
                "getInitialState",
                "getChildContext",

                "componentWillMount",
                "componentDidMount",
                "componentWillReceiveProps",
                "shouldComponentUpdate",
                "componentWillUpdate",
                "componentDidUpdate",
                "componentDidCatch",
                "componentWillUnmount"
            ]
        }
    }],

    "unicorn/catch-error-name": ["error", {"name": "err"}],
    "unicorn/explicit-length-check": "error",
    "unicorn/no-abusive-eslint-disable": "error",
    "unicorn/no-process-exit": "error",
    "unicorn/throw-new-error": "error",
    "unicorn/number-literal-case": "error",
    "unicorn/escape-case": "error",
    "unicorn/no-array-instanceof": "error",
    "unicorn/no-new-buffer": "error",
    "unicorn/no-hex-escape": "error",
    "unicorn/custom-error-definition": "error",
    "unicorn/prefer-starts-ends-with": "error",
    "unicorn/prefer-type-error": "error"
  }
}