@import 'mixins/toggle-size';
@import 'mixins/toggle-variant';

$toggle-font-weight:           normal !default;
$toggle-default-color:         #333 !default;

$toggle-border-radius-base:    $border-radius-base !default;
$toggle-border-radius-lg:      $border-radius-lg !default;
$toggle-border-radius-sm:      $border-radius-sm !default;

$toggle-sizes: (
    '.toggle': (52px, 20px, 20px)
) !default;

.toggle {
    position: relative;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;

    input[type="checkbox"] {
        opacity: 0;
        position: absolute;

        &:checked {
            + label .switch-inner {
                margin-left: 0;
            }
            + label .switch {
                right: 0;
            }
        }
    }

    label {
        display: block;
        overflow: hidden;
        cursor: pointer;
        border-radius: 2px;
    }

    .switch {
        display: block;
        position: relative;
        top: -2px;
        transition: right 0.3s ease-in 0s;

        &-inner,
        &:before,
        &:after {
            box-sizing: border-box;
            display: inline-block;
            font-family: Trebuchet, Arial, sans-serif;
            font-size: 12px;
            font-weight: bold;
            margin: 0;
            padding: 0;
            vertical-align: top;
        }
        &-inner {
            border-width: 2px;
            border-style: solid;
        }

        &:before,
        &:after {
            content: " ";
            text-align: center;
        }
    }

    &-oval {
        label {
            border-radius: 100px;
        }
        .switch-inner {
            border-radius: 100px;
        }
    }

    &-worded {
        .switch {
            content: " ";
            &:before {
                content: "ON";
            }
            &:after {
                content: "OFF";
            }
        }
    }

    @include toggle-variant(#999);
}

@each $class, $attributes in $toggle-sizes {
    #{$class} {
        @include toggle-size($attributes...);
    }
}

@each $color, $value in $colors {
    .toggle-#{$color} {
        @include toggle-variant($value);
    }
}