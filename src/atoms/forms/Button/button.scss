@import 'mixins/button-size';
@import 'mixins/button-variant';
@import '../../../../themes/_mixins/tab-focus';

@if (null != index($ui-includes, 'form.button') and null == index($ui-excludes, 'form.button')) {
    //
    // Button-related variables
    //
    $btn-font-weight:           normal !default;
    $btn-default-color:         #333 !default;

    $btn-border-radius-base:    $border-radius-base !default;
    $btn-border-radius-lg:      $border-radius-lg !default;
    $btn-border-radius-sm:      $border-radius-sm !default;

    $btn-sizes: (
        '.btn': ($padding-base-vertical, $padding-base-horizontal, $font-size-base, $line-height-base, $btn-border-radius-base),
        '.btn-xs': ($padding-xs-vertical, $padding-xs-horizontal, $font-size-sm, $line-height-sm, $btn-border-radius-sm),
        '.btn-sm': ($padding-sm-vertical, $padding-sm-horizontal, $font-size-sm, $line-height-sm, $btn-border-radius-sm),
        '.btn-lg': ($padding-lg-vertical, $padding-lg-horizontal, $font-size-lg, $line-height-lg, $btn-border-radius-lg)
    ) !default;

    .btn {
        background-image: none;
        border: 1px solid transparent;
        display: inline-block;
        cursor: pointer;
        font-weight: $btn-font-weight;
        margin-bottom: 0;
        text-align: center;
        touch-action: manipulation;
        transition: .2s ease-out;
        user-select: none;
        vertical-align: middle;
        white-space: nowrap;
        @include button-size($padding-base-vertical, $padding-base-horizontal, $font-size-base, $line-height-base, $btn-border-radius-base);


        /*&,
        &:active,
        &.active {
            &:focus,
            &.focus {
                @extend .tab-focus;
            }
        }*/

        &:hover,
        &.hover,
        &:focus,
        &.focus,
        &:active,
        &.active {
            background-color: transparent;
            background-image: none;
            border-color: transparent;
            color: $btn-default-color;
            text-decoration: none;
        }

        &:active,
        &.active {
            outline: 0;
            background-image: none;
        }

        &.disabled,
        &[disabled],
        fieldset[disabled] & {
            &,
            &:hover,
            &:active,
            &.active {
                box-shadow: none;
                cursor: disabled;
                opacity: .65;
            }
        }

        &a {
            &.disabled,
            fieldset[disabled] & {
                pointer-events: none;
            }
        }
    }

    @each $color, $value in $colors {
        .btn-#{$color} {
            @include button-variant($value);
        }
    }

    @each $color, $value in $colors {
        .btn-outline-#{$color} {
            @include button-outline-variant($value);
        }
    }

    .btn-loader {
        position: relative;
        transition: .3s ease all;

        .btn-loader-label {
            display: inline-block;
            position: relative;
            transition: .3s ease all;
        }

        .btn-loader-spinner {
            display: inline-block;
            height: 32px;
            left: 50%;
            margin-left: -16px;
            margin-top: -12px;
            opacity: 0;
            pointer-events: none;
            position: absolute;
            top: 50%;
            transform: scale(.2);
            width: 32px;
            z-index: 1000;

            .sk-spinner-fading-circle {
                div {
                    &::before {
                        background: #fff;
                    }
                }
            }
        }

        &.loading {
            .btn-loader-label {
                opacity: 0;
                transform: scale(2.2);
            }

            .btn-loader-spinner {
                opacity: 1;
                transform: none;
            }
        }
    }
}